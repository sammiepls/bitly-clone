exit
n
url.save
url
n
x
exit
x
url
n
url
n
url
x
exit
n
exit
values
n
values
url.success
url
exit
url.short_url
url.id
exit
url.message
url
exit
url.click_count
url
url.click_count.to_json
url.click_count
exit
url.errors.messages[:url].to_s
url.errors.messages[:url].to_json
url.errors.messages[:url]
url.errors.messages
exit
url.errors.messages[:url]
url.errors.messages[:ori_url]
@url.errors.messages
url.errors.messages
c
cc
c
n
url.save
continue
@url.length
@url.empty?
@url.nil?
Url.all
@url
continue
exit
\n
n
url.click_count
n
url
continue
l
continue
url
c
params["short_url"]
Url.all
url
c
cc
ccccc
continue
rr
r
paraa
errors[:ori_url].join
errors[:ori_url].to_s
errors[:ori_url]
errors[1]
errors[2]
errors[:url]
errors = url.errors.messages
url.errors.messages
url.errors.message
url.errors
url.error
url.errors
url.error
Url.error
Url.errors
